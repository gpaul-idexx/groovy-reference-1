buildscript {
    ext {
        springBootVersion = '1.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.github.samueltbrown.cucumber" version "0.9"
}

apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'idea'

idea {
    module {
        testSourceDirs += file('src/cucumber/groovy')
    }
}

jar {
    baseName = 'groovy-reference'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.cloud:spring-cloud-starter-aws')
    /*compile('org.springframework.cloud:spring-cloud-starter-aws-jdbc')*/
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile("com.h2database:h2")
    compile('org.springframework.data:spring-data-rest-hal-browser')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.session:spring-session')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.codehaus.groovy:groovy')
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
    testCompile 'info.cukes:cucumber-groovy:1.2.4'
    testCompile 'info.cukes:cucumber-junit:1.2.4'
    testCompile 'org.springframework:spring-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.BUILD-SNAPSHOT"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

cucumber {
    formats = [
            'pretty',
            "junit:${testResultsDir}/cucumber.xml".toString(),
            "html:${testReportDir}/cucumber".toString()
    ]
}